<paper>
<cited id="V0">
<title id=" P87-1030.xml">a model for generating better explanations </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>there is general agreement that correct, direct response to question may, under certain circumstances, be inadequate.
</prevsent>
<prevsent>pre-vious work has emphasized that good response should be formulated in light of the user immediate goals and plans as inferred from the utterance (or discourse seg- ment).
</prevsent>
</prevsection>
<citsent citstr=" P86-1032 ">
thus, good response may also have to (i) assure the user that his underlying goal was considered in arriving at the response (mckeown, wish, and matthews 1985); (ii) answer query that results from an inappropriate plan indirectly by responding to the underlying goal of the query (pollack 1986); (<papid> P86-1032 </papid>iii) pro-vide additional information aimed at preventing the  user from drawing false conclusions because of violated expectations of how an expert would respond (joshi, webber, and weischedel 1984a, 1984b).</citsent>
<aftsection>
<nextsent>the claim of this paper is that cooperative response can (and should) also address user overall goals, plans, and preferences among those goals and plans.
</nextsent>
<nextsent>we wish to show that an advice seeker may also expect the expert to respond in light of, not only the immediate goals and plans of the user as expressed in query, but also in light of (i) previously expressed goals or prefer-ences, (ii) goals that may be inferred or known from the user background, and (iii) domain goals the user may be expected to hold.
</nextsent>
<nextsent>if the expert response does not consider these latter type of goals the result may mislead or confuse the user and, at the least, will not be cooperative.
</nextsent>
<nextsent>as one example, consider the following exchange between student and student-advisor system.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V1">
<title id=" P87-1030.xml">a model for generating better explanations </title>
<section> the lgor thm.  </section>
<citcontext>
<prevsection>
<prevsent>for example, if the user displays or mentions predilection for numerical analysis courses this would be installed in the user model as goal to be achieved.
</prevsent>
<prevsent>explanations and predictions of people choices in everyday life are often founded on the assumption of human rationality.
</prevsent>
</prevsection>
<citsent citstr=" P85-1007 ">
allen (1983) work in recognizing intentions from natural language utterances makes the assumption that  people are rational agents who are  capable of forming and executing plans to achieve their goals  (see also cohen and levesque 1985).<papid> P85-1007 </papid></citsent>
<aftsection>
<nextsent>our algo- . -ithm reasons about the user goals and plans according to some postulated guiding principles of action to which reasonable agent will try to adhere in deciding between competing goals and methods for achieving those goals.
</nextsent>
<nextsent>if the user does not  live up  to these prin-ciples, the response generated by the algorithm will include how the principles are violated and also some alternatives that are better (if they exist) because they do not violate the principles.
</nextsent>
<nextsent>some of these principles will be made explicit in the following description of the algorithm (see van beek 1986 for more complete description).
</nextsent>
<nextsent>the algorithm begins by checking whether the user query (e.g.  can enroll in cs 375? ) is possible or not possible (refer to figure 1).
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V2">
<title id=" P89-1019.xml">a calculus for semantic composition and scoping </title>
<section> an  obvious  const ra in t?.  </section>
<citcontext>
<prevsection>


</prevsection>
<citsent citstr=" J87-1005 ">
treatments of quantifier scope in montague gram-mar (montague, 1973; dowty et al, 1981; cooper, 1983), transformational grammar (reinhart, 1983; may, 1985; helm, 1982; roberts, 1987) and com-putational linguistics (hobbs and shieber, 1987; <papid> J87-1005 </papid>moran, 1988) <papid> P88-1005 </papid>have depended implicitly or explic-itly on constraint on possible logical forms to explain why examples 1 such as (1) * woman who saw every man disliked him are ungrammatical, nd why in examples such as (2) every man saw friend of his (3) every admirer of picture of himself is vain the every.., noun phrase must have wider scope than the a... noun phrase if the pronoun in each example is assumed to be bound by its antecedent.</citsent>
<aftsection>
<nextsent>what exactly counts as bound anaphora varies be-tween different accounts of the phenomena, but the rough intuition is that semantically bound pronoun plays the role of variable bound by the logical form (a quantifier) of its antecedent.
</nextsent>
<nextsent>ex-ample (1) above is then  explained  by noting that in all the examples that follow, the pronoun and its intended antecedent are italicized.
</nextsent>
<nextsent>as usual, starred exam- pies are supposed to be ungrmt ical its logical form would be something like 3w.woman(w)~ (vm.man(rn) ::~ saw(w, rn))~ disliked(w, m) but this is  ill-formed  because variable occurs as an argument of disliked outside the scope of its binder vm.
</nextsent>
<nextsent>2 as for examples (2) and (3), the argument is similar: wide scope for the log-ical form of the a... noun phrase would leave an occurrence of the variable that the logical form of every.., binds outside the scope of this quantifier.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V3">
<title id=" P89-1019.xml">a calculus for semantic composition and scoping </title>
<section> an  obvious  const ra in t?.  </section>
<citcontext>
<prevsection>


</prevsection>
<citsent citstr=" P88-1005 ">
treatments of quantifier scope in montague gram-mar (montague, 1973; dowty et al, 1981; cooper, 1983), transformational grammar (reinhart, 1983; may, 1985; helm, 1982; roberts, 1987) and com-putational linguistics (hobbs and shieber, 1987; <papid> J87-1005 </papid>moran, 1988) <papid> P88-1005 </papid>have depended implicitly or explic-itly on constraint on possible logical forms to explain why examples 1 such as (1) * woman who saw every man disliked him are ungrammatical, nd why in examples such as (2) every man saw friend of his (3) every admirer of picture of himself is vain the every.., noun phrase must have wider scope than the a... noun phrase if the pronoun in each example is assumed to be bound by its antecedent.</citsent>
<aftsection>
<nextsent>what exactly counts as bound anaphora varies be-tween different accounts of the phenomena, but the rough intuition is that semantically bound pronoun plays the role of variable bound by the logical form (a quantifier) of its antecedent.
</nextsent>
<nextsent>ex-ample (1) above is then  explained  by noting that in all the examples that follow, the pronoun and its intended antecedent are italicized.
</nextsent>
<nextsent>as usual, starred exam- pies are supposed to be ungrmt ical its logical form would be something like 3w.woman(w)~ (vm.man(rn) ::~ saw(w, rn))~ disliked(w, m) but this is  ill-formed  because variable occurs as an argument of disliked outside the scope of its binder vm.
</nextsent>
<nextsent>2 as for examples (2) and (3), the argument is similar: wide scope for the log-ical form of the a... noun phrase would leave an occurrence of the variable that the logical form of every.., binds outside the scope of this quantifier.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V5">
<title id=" P89-1019.xml">a calculus for semantic composition and scoping </title>
<section> an  obvious  const ra in t?.  </section>
<citcontext>
<prevsection>
<prevsent>153 the main goal of this paper is to argue that the free-variable constraint is actually consequence of basic semantic properties that hold in seman-tic domain allowing functional application and ab-straction, and are thus independent ofa particular 10gical-form representation.
</prevsent>
<prevsent>as corollary, will also show that the constraint is better expressed as restriction on the derivations of meanings of sentences from the meanings of their parts rather than restriction on logical forms.
</prevsent>
</prevsection>
<citsent citstr=" P88-1010 ">
the result-ing system is related to the earlier system of con-ditional interpretation rules developed by pollack and pereira (1988), <papid> P88-1010 </papid>but avoids that system use of formal conditions on the order of assumption discharge.</citsent>
<aftsection>
<nextsent>t ionality work in combinatory logic and the a-calculus is concerned with the elucidation of the basic notion of functionality: how to construct functions, and how to apply functions to their arguments.
</nextsent>
<nextsent>there is very large body of results in this area, of which will need only very small part.
</nextsent>
<nextsent>one of the simplest and most elegant accounts of functionality, originally introduced by curry and feys (1968) and further elaborated by other authors (stenlund, 1972; lambek, 1980; howard, 1980) involves the use of logical calculus to de-scribe the types of valid functional objects.
</nextsent>
<nextsent>in natural deduction format (prawitz, 1965), the cal- culns can be simply given by the two rules in fig-ure 1.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V6">
<title id=" P85-1008.xml">onto logical promiscuity </title>
<section> motivation </section>
<citcontext>
<prevsection>
<prevsent>sentence (4) shows that virtually anything can be embedded in higher predication.
</prevsent>
<prevsent>this is the reason, in the logical nots- tins, for flattening everything into predications about individu- ms. there are four serious problems that must be dealt with if this approach is to work - quantifiers, opaque adverbials, the distinction between de re and de ditto readings of belief reports, and the problem of identity in intensional contexts.
</prevsent>
</prevsection>
<citsent citstr=" P83-1009 ">
i have described solution to the quantifier problem else- where (hobbs, 1983).<papid> P83-1009 </papid></citsent>
<aftsection>
<nextsent>briefly, universally quantified variables are reified ms typical elements of sets, existential quantification inside the scope of universally quantified variables are handled by means of dependency functions, and the quantifier structure of sentences encoded in indices on predicates.
</nextsent>
<nextsent>in this paper will address only the other three problems in detail.
</nextsent>
<nextsent>3 opaque adverbials.
</nextsent>
<nextsent>\[t seems reasonably natural to treat transparent adverbials as properties of events.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V7">
<title id=" P85-1022.xml">a computational semantics for natural language </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>is due to creary 119831.
</prevsent>
<prevsent>the grammatical theory in which the present research is couched is the theory of head grammar (hg) set forth in \[pollard 1984\] and \[pollard forthcoming and imple-mented as the front end of the hpsg (head-driven phrase structure grammar) system, an english \[auguage database query system underdevelopment at hewlett-packard lab-oratories.
</prevsent>
</prevsection>
<citsent citstr=" P85-1021 ">
the non-semantic aspects of the implementation are described in iflickinger, pollard, &amp; wasow t9851 and \[proudian &amp; pollard 1.985<papid> P85-1021 </papid>1.</citsent>
<aftsection>
<nextsent>to get started, we make the following assumptions about what categories of things are in the world.
</nextsent>
<nextsent>a. there are individuals.
</nextsent>
<nextsent>these include objects of the usual kind (such as ron and nancy) as well as situations.
</nextsent>
<nextsent>situations comprise states (such as ron being tall) and events (such as ron giving his inaugural address on january 21, 1985).
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V9">
<title id=" P85-1015.xml">parsing with discontinuous constituents </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>to demonstrate that it is possible to parse with such discontinuous constituents.
</prevsent>
<prevsent>i show how they can be incorporated into variant of definite clause grammars, and that these grammars can be used in conjunction with proof procedure.
</prevsent>
</prevsection>
<citsent citstr=" P83-1021 ">
such as ear\[ey deduction, to coestruct parser, a.s shown in pereira and warren (1983).<papid> P83-1021 </papid></citsent>
<aftsection>
<nextsent>this paper is organized as follows: section 2 contains an infor-mal introduction to definite clause grammars and ,lisctmses how they can be used in parsing, section :l giws brief description of some of the grammatical features of o**o non-, onligurational language.
</nextsent>
<nextsent>guugu yimhlhirr, section presents ;t deiinite clause frag-ment for this language, aml shows how this can be u~ed for parsing.
</nextsent>
<nextsent>section 5 notes that the use of di~conti*uiot*s con.~l.ituent.~ is *lot lim-ited to definite clause granunars.
</nextsent>
<nextsent>\[)lit they could lie incorporated into such disparate formalisnts as gp~(;, i,fg or ( ;\[l section 6 discusses whether unified account of par.qng both conligurational and non-configurational nguages can be given, and section 7 com-pares the notion of discontinuous constituents with other approaches to free word order.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V11">
<title id=" P89-1033.xml">parsing as natural deduction </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>272 the natural deduction approach to parsing with categorial grammars plits up into two general mainstreams both of which use the gentzen se-quent representation to state the corresponding calculi.
</prevsent>
<prevsent>the first alternative is to take general purpose calculus and propose an adequate transla-tion of categories into formulae of this logic.
</prevsent>
</prevsection>
<citsent citstr=" P88-1033 ">
an example for this approach has been carried out by pareschi \[pareschi 1988\], \[<papid> P88-1033 </papid>pareschi 1989\].</citsent>
<aftsection>
<nextsent>on the other hand, one might use specialized cal-culus.
</nextsent>
<nextsent>lambek proposed such calculus for ca-tegorial grammar more than three decades ago \[lambek 1958\].
</nextsent>
<nextsent>the aim of this paper is to describe how lam- bek calculus can be implemented in such way that it serves as an efficient parsing mechanism.
</nextsent>
<nextsent>to achieve this goal, the main drawback of the original lambek calculus, which consists of version of the  spurious ambiguity problem , has to be overcome.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V12">
<title id=" P90-1008.xml">a compositional semantics for focusing subjuncts </title>
<section> muriel voted for hubert..  </section>
<citcontext>
<prevsection>
<prevsent>4 focus is initially instantiated onto the leaves of the tree that represent intona- tion ally stressed words.
</prevsent>
<prevsent>the only realization of the focus feature that we accommodate is into national accent; however, our theory can easily be extended to allow for other overt realizations of focus, includ-ing other into national effects (e.g.
</prevsent>
</prevsection>
<citsent citstr=" P86-1021 ">
(hirschberg and pierrehumbert, 1986)).<papid> P86-1021 </papid></citsent>
<aftsection>
<nextsent>focus is optionally and non- deterministically percolated up the syntax tree, to any node from its rightmost daughter (rightmost be- cause stress manifests itself only at the end of the focused constituent (anderson, 1972)).
</nextsent>
<nextsent>the non- determinism of the percolation of focus is responsible for ambiguity in the interpretation of sentences with focusing subjuncts.
</nextsent>
<nextsent>how far the focus feature per-colates up determines how wide focus is attributed to the focusing subjunct: (17) 1.
</nextsent>
<nextsent>john also read the book (from the library) (as well as the one from the store).
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V13">
<title id=" P88-1012.xml">interpretation as abduction </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>the process of interpreting sentences in discourse can be viewed as the process of providing the best explanation of why the sentences would be true.
</prevsent>
<prevsent>in the tacitus project at sri, we have developed scheme for abductive inference that yields signi~caut simplification the description of such interpretation processes and significant extension of the range of phenomena that can be captured.
</prevsent>
</prevsection>
<citsent citstr=" H86-1003 ">
it has been implemented in the tacitus system (stickel, 1982; hobbs, 1986; <papid> H86-1003 </papid>hobbs and martin, 1987) and has been and is being used to solve variety of interpretation problems in casualty reports, which are messages about breakdowns in machinery, as well as in other texts3 it~ is well-known that people understand discourse so well ~ because they know so much.</citsent>
<aftsection>
<nextsent>accordingly, the aim of the tacitus project has been to investigate how knowledge is used in the interpretation discourse.
</nextsent>
<nextsent>this has involved building large knowledge base of commonsense and do- main knowledge (see hobbs et al, 1986), <papid> P86-1035 </papid>and developing procedures for using this knowledge for the interpretation of discourse.</nextsent>
<nextsent>in the latter effort, we have concentrated on problems in local pragmatics, pecifically, the problems of reference resolution, the interpretation compound nom- inals, the resolution of some kinds of syntactic ambiguity, and metonymy resolution.</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V14">
<title id=" P88-1012.xml">interpretation as abduction </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>it has been implemented in the tacitus system (stickel, 1982; hobbs, 1986; <papid> H86-1003 </papid>hobbs and martin, 1987) and has been and is being used to solve variety of interpretation problems in casualty reports, which are messages about breakdowns in machinery, as well as in other texts3 it~ is well-known that people understand discourse so well ~ because they know so much.</prevsent>
<prevsent>accordingly, the aim of the tacitus project has been to investigate how knowledge is used in the interpretation discourse.</prevsent>
</prevsection>
<citsent citstr=" P86-1035 ">
this has involved building large knowledge base of commonsense and do- main knowledge (see hobbs et al, 1986), <papid> P86-1035 </papid>and developing procedures for using this knowledge for the interpretation of discourse.</citsent>
<aftsection>
<nextsent>in the latter effort, we have concentrated on problems in local pragmatics, pecifically, the problems of reference resolution, the interpretation compound nom- inals, the resolution of some kinds of syntactic ambiguity, and metonymy resolution.
</nextsent>
<nextsent>our approach to these problems is the focus of this paper.
</nextsent>
<nextsent>in the framework we have developed, what the interpre-tation of sentence is can be described very concisely: zcharniak (1986) and norvig (1987) have also applied abductive inference chniques todiscoume interpretation.
</nextsent>
<nextsent>(1) to interpret sentence: derive the logical form of the sentence, together with the constraints that predicates impose on their arguments, allowing for coercions, merging redundancies where possible, making assumptions where necessary.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V15">
<title id=" P88-1012.xml">interpretation as abduction </title>
<section> local pragmatics.  </section>
<citcontext>
<prevsection>
<prevsent>axioms of the form (vz, y)sample(y, z) nn(z, y) handle the very common ease in which the head noun is relational noun and the pre nominal noun fills one of its roles, as in  oil sample .
</prevsent>
<prevsent>complex relations uch as the one in  luhe-oil alarm  can sometimes be glossed as  for .
</prevsent>
</prevsection>
<citsent citstr=" A88-1032 ">
(v=, v)fo~cy, =) ~ --(=, y) syntactic ambigu ty : some of the most com-mon types of syntactic ambiguity, including prepositional phrase and other attachment ambiguities and very com-pound nominal ambiguities, can be converted into con-strained coreference problems (see bear and hobbs, 1988).<papid> A88-1032 </papid></citsent>
<aftsection>
<nextsent>ssee hobbs (1985<papid> P85-1008 </papid>a) for explanation fthis notation for events.</nextsent>
<nextsent>96 for example, in (2) the first argument of after is taken to be an existentially quantified variable which is equal to ei-ther the compressor the alarm.</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V16">
<title id=" P88-1012.xml">interpretation as abduction </title>
<section> local pragmatics.  </section>
<citcontext>
<prevsection>
<prevsent>complex relations uch as the one in  luhe-oil alarm  can sometimes be glossed as  for .
</prevsent>
<prevsent>(v=, v)fo~cy, =) ~ --(=, y) syntactic ambigu ty : some of the most com-mon types of syntactic ambiguity, including prepositional phrase and other attachment ambiguities and very com-pound nominal ambiguities, can be converted into con-strained coreference problems (see bear and hobbs, 1988).<papid> A88-1032 </papid></prevsent>
</prevsection>
<citsent citstr=" P85-1008 ">
ssee hobbs (1985<papid> P85-1008 </papid>a) for explanation fthis notation for events.</citsent>
<aftsection>
<nextsent>96 for example, in (2) the first argument of after is taken to be an existentially quantified variable which is equal to ei-ther the compressor the alarm.
</nextsent>
<nextsent>the logical form would thus include (3.
</nextsent>
<nextsent>. .e,c,y,a . . .
</nextsent>
<nextsent>a aftcr(y,a) ye {c,~} . . .
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V19">
<title id=" P88-1012.xml">interpretation as abduction </title>
<section> local pragmatics.  </section>
<citcontext>
<prevsection>
<prevsent>vv are at present working, and with some optimism, on semantics for the numbers and the proce-dures that operate on them.
</prevsent>
<prevsent>in the course of this work, we may modify the procedures to an extent, but we expect retain their essential properties.
</prevsent>
</prevsection>
<citsent citstr=" P83-1009 ">
4for justification for this kind of logical form for sentences with quantifiers and inteusional operators, ee hobbs(1983) <papid> P83-1009 </papid>and hobbs (1985<papid> P85-1008 </papid>a).</citsent>
<aftsection>
<nextsent>97
</nextsent>
<nextsent>we now argue for the last half of the characterization (i) of interpretation.
</nextsent>
<nextsent>abduction is the process by which, from (vz)p(z d q(r) and q(a), one concludes p(a i. one can think of q(a) as the observable evidence, of (vz)p(z) q(z) as gen-eral principle that could explain q(a) occurrence, and of p(a) as the inferred, underlying cause of q(a).
</nextsent>
<nextsent>of course, this mode of inference is not valid; there may be many possible such p(a) s.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V23">
<title id=" P88-1012.xml">interpretation as abduction </title>
<section> examples.  </section>
<citcontext>
<prevsection>
<prevsent>it is thus old information.
</prevsent>
<prevsent>the adequacy can be proved, and is hence assumed as new information.
</prevsent>
</prevsection>
<citsent citstr=" T75-2034 ">
the second example is from clark (1975), <papid> T75-2034 </papid>and illustrates what happens when the given and new information are combined into single lexical item.</citsent>
<aftsection>
<nextsent>john walked into the room.
</nextsent>
<nextsent>the chandelier shone brightly.
</nextsent>
<nextsent>what chandelier is being referred to?
</nextsent>
<nextsent>let us suppose we have in our knowledge base the fact that rooms have lights.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V24">
<title id=" P88-1012.xml">interpretation as abduction </title>
<section> examples.  </section>
<citcontext>
<prevsection>
<prevsent>now assum-ing the most specific atoms we have derived including all the  etcetera  conditions, we arrive at an interpretation that is minimal and that solves the internal coreference problems as byproduct.
</prevsent>
<prevsent>4.3 thorough in tegrat ion f syntax , semantics, and pragmatics by combining the idea of interpretation as abduction with the older idea of parsing as deduction (kowalski, 1980, pp.
</prevsent>
</prevsection>
<citsent citstr=" P83-1021 ">
52-53; pereira and warren, 1983), <papid> P83-1021 </papid>it becomes possible to integrate syntax, semantics, and pragmatics in very thor-ough and elegant way.</citsent>
<aftsection>
<nextsent>9 below is simple grammar written in prolog style, but incorporating calls to local pragmatics.
</nextsent>
<nextsent>the syntax portion is represented in standard prolog man-ner, with nonterminals treated as predicates and having as two of its arguments the beginning and endpoints of the phrase spanned by the nonterminal.
</nextsent>
<nextsent>the one modification we would have to make to the abduction scheme is to allow conjuncts in the antecedents to take costs directly as well as weights.
</nextsent>
<nextsent>constraints on the application of phrase struc-ture rules have been omitted, but could be incorporated in the usual way.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V28">
<title id=" P84-1065.xml">using focus to generate complex and simple sentences </title>
<section> sam like. (topicalization).  </section>
<citcontext>
<prevsection>
<prevsent>4.
</prevsent>
<prevsent>a formalism for surface generation in this section we discuss the prolog definite clause grammar (dcg) formalism (pereira and warren, 1980) and how it can be used for language generation, as well as recognition.
</prevsent>
</prevsection>
<citsent citstr=" P83-1011 ">
we then review the functional grammar formalism (kay, 1979) that has been used in other generation systems (e.g., mckeown, 1982; appelt, 1983).<papid> P83-1011 </papid></citsent>
<aftsection>
<nextsent>finally, we describe how aspects of functional grammar can be encoded in dcg to produce generator with the best features of both formalisms.
</nextsent>
<nextsent>4.1 definite clause grammars.
</nextsent>
<nextsent>the dcg formalism (pereira and warren, 1980) is based on method for for expressing rammar ules as clauses of first-order predicate logic (colmerauer, 1978; kowalski, 1980).
</nextsent>
<nextsent>as discussed by pereira and warren, dcgs extend context-free grammars in several ways that make them suitable for describing and analyzing natural language.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V37">
<title id=" P84-1065.xml">using focus to generate complex and simple sentences </title>
<section> related work in generation.  </section>
<citcontext>
<prevsection>
<prevsent>kay work provides the basis for mckeown and appelt and emphasizes the development of formalism and grammar for generation that allows for the use of functional information.
</prevsent>
<prevsent>both mckeown and appelt make direct use of kay formalism, with mckeown emphasis being on the influence of focus information on syntax and appelt emphasis being on the development of facility that allows interaction between the grammar and an underlying planning component.
</prevsent>
</prevsection>
<citsent citstr=" P83-1012 ">
nigel (mann, 1983) <papid> P83-1012 </papid>is fourth system that makes use of functional information and is based on systemic grammar (hudson, 1974).</citsent>
<aftsection>
<nextsent>a systemic grammar contains choice points that query the environment to decide between alternatives (the environment may include functional, discourse, semantic, or contextual information).
</nextsent>
<nextsent>mann emphasis, so far, has been on the development of the system, on the development of large linguistically justified grammar, and on the influence of underlying semantics on choices.
</nextsent>
<nextsent>the influence of functional information on syntactic hoice as well as the generation of complex propositions are issues he has not yet addressed within the systemic grammar framework.
</nextsent>
<nextsent>of previous ystems that are able to combine simple clauses to produce complex sentences, davey (1978) is probably the most sophisticated.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V38">
<title id=" P84-1065.xml">using focus to generate complex and simple sentences </title>
<section> related work in generation.  </section>
<citcontext>
<prevsection>
<prevsent>it is capable of ignoring these directions when it is syntactically inappropriate to produce complex sentences, but it can not decide when to combine propositions.
</prevsent>
<prevsent>kds (mann, 1981) uses heuristics that sometimes dictate that complex sentence is appropriate, but the heuristics are not based on general linguistic principles.
</prevsent>
</prevsection>
<citsent citstr=" P83-1022 ">
ana (kukich, 1983) <papid> P83-1022 </papid>can also combine propositions, although, like davey, the decision is based on rhetorical relations rather than functional information.</citsent>
<aftsection>
<nextsent>in sum, those systems that are capable of generating complex sentences tend to relyon rhetorical, semantic, or syntactic information to make their decisions.
</nextsent>
<nextsent>those systems that make use of functional information have not investigated the general problem of choosing between complex and simple sentences.
</nextsent>
<nextsent>the current implementation can be extended in variety of ways to produce better connected text.
</nextsent>
<nextsent>additional research is required to determine how and when to use other textual connectives for combining propositions.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V39">
<title id=" P91-1002.xml">inclusion disjoint ness and choice the logic of linguistic classification </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>we model the distinction between primitive and defined concepts as well as between closed- and open-world reasoning.
</prevsent>
<prevsent>we ap-ply our logical analysis to the sort inheritance and unification system of hpsg and also to classifica-tion in systemic hoice systems.
</prevsent>
</prevsection>
<citsent citstr=" J88-1004 ">
our focus in this paper is stripped-down mono-tonic inheritance-based knowledge representation system which can be applied directly to provide clean declarative semantics for halliday sys-temic choice systems (see winograd 1983, mel-lish 1988, <papid> J88-1004 </papid>kress 1976) and the inheritance module of head-driven phrase-structure grammar (hpsg) (pollard and sag 1987, pollard in press).</citsent>
<aftsection>
<nextsent>our in-heritance networks are constructed from only the most rudimentary primitives: basic concepts and isa and isnota links.
</nextsent>
<nextsent>by applying general al-gebraic techniques, we show how to generate meet semi lattice whose nodes correspond to con-sistent conjunctions of basic concepts and where meet corresponds to conjunction.
</nextsent>
<nextsent>we also show how to embed this result in distributive lattice where the elements correspond to arbitrary con-junctions and dis junctions of basic concepts and where meet and join correspond to conjunction and disjunction, respectively.
</nextsent>
<nextsent>while we do not consider either role- or attribute-based reasoning in this paper, our constructions are directly appli-cable as front-end for the combined attribute- and concept-based formalisms of ait-kaci (1986), nebel and smolka (1989), carpenter (1990), car-penter, pollard and franz (1991) and pollard (in press).
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V42">
<title id=" P82-1004.xml">whats in a semantic network </title>
<section> discussion.  </section>
<citcontext>
<prevsection>
<prevsent>we are currently extending the context mechanism to handle time, belief contexts (based on syntactic theory of belief \[haas, 1982\]), simple hypothetical reasoning, and representation of plans.
</prevsent>
<prevsent>because the matcher is defined by set of axioms, it is relatively simple to add new axioms that handle new features.
</prevsent>
</prevsection>
<citsent citstr=" P81-1017 ">
for example, we are currently incorporating model of temporal knowledge based on time intervals \[allen, 1981<papid> P81-1017 </papid>a\].</citsent>
<aftsection>
<nextsent>this is done by allowing any object, event, or relation to be qualified by time interval as follows: for any untimed concept x, and any time interval t, there is timed concept consisting of viewed during which is expressed by the term (t-concept t).
</nextsent>
<nextsent>this concept is of type (timed tx), where tx is the type of x. thus we require type hierarchy of timed concepts that mirrors the hierarchy of untimed concepts.
</nextsent>
<nextsent>once this is done, we need to introduce new built-in axioms that extend the retriever.
</nextsent>
<nextsent>for instance, we define predicate, during(a,b), that is true only if interval is wholly contained in interval b. now, if we want the retriever to automatically infer that if relation holds during an interval t, then it holds in all sub intervals of t, we need the following built-in axioms.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V43">
<title id=" P87-1027.xml">the derivation of a grammatically indexed lexicon from the longman dictionary of contemporary english </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>briscoe et al.
</prevsent>
<prevsent>(1987) describes the sentence grammar formalism and current coverage of the english grammar in detail.
</prevsent>
</prevsection>
<citsent citstr=" C86-1066 ">
russell et al (1986) <papid> C86-1066 </papid>describes the morphological anal-yser and dictionary system.</citsent>
<aftsection>
<nextsent>further relevant details of both projects are provided in section 2.
</nextsent>
<nextsent>as part of the grammar project, in tandem with the development of the grammar proper, work is un-derway to develop sizeable word list which will be in-tegrated with an existing lexicon of about 4000 words, handcrafted by the morphology project.
</nextsent>
<nextsent>the cover- age of this word list and its compatibility with the sentence grammar, word grammar and existing lexi-con critical for the complete analysis ystem.
</nextsent>
<nextsent>the word list need only contain base and irregular entries, as productive inflectional nd derivational variants are analysed at run-time on the basis of the word gram-mar. therefore, when the word list is integrated with the existing lexicon and dictionary system it will form dynamic system for word analysis, and not just repository of word forms used for simple lookup.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V45">
<title id=" P87-1027.xml">the derivation of a grammatically indexed lexicon from the longman dictionary of contemporary english </title>
<section> the  source  data.  </section>
<citcontext>
<prevsection>
<prevsent>then, verb senses which contain iv\] or \[x code and its\] or \[tsa\] code in the associated grammar code field, (but none of the codes mentioned above), are clas-sified as oralstng.
</prevsent>
<prevsent>verb senses with \[vj or \[x(to be)\] code, (but no \[t5\] or \[tsa\] codes), are classified.
</prevsent>
</prevsection>
<citsent citstr=" J87-3002 ">
as oequl finally, verb senses containing \[t2\], \[t3\] or it4\] code, or an \[i2\], \[13\] or \[i4\] code are classified as sequl below we give examples of each type; for detailed escription see boguraev and briscoe (1987).<papid> J87-3002 </papid></citsent>
<aftsection>
<nextsent>happen(s) \[wvs;/zd-is\] (type sraising) warn(1) \[wv4;i0;ti:( o~ aca/m~),sa;d 5a;v3\] (type 3 o~ui) usume(1) \[wv4;tl,sa,b ,x(to be)l,7\] (type 20raising) decline(s) \[ti,s;10\] (type 2 szqul) figure 5: the four semantic types of verb generic lexical template of the form illustrated in figure 4 can clearly be directly mapped into feature duster within the features and feature set declarations used by the dictionary and grammar projects.
</nextsent>
<nextsent>a coln- parison of the existing entries for ~oelieve ~ in the handcrafted lexicon (figure 1) and the third word sense for ~believe extracted from ldoce demonstrates that much of the information available from ldoce is of direct utility - - for example the subcat values can be derived by an analysis of the takes values and the oraie ing logical type specification above.
</nextsent>
<nextsent>in-deed, we have demonstrated the feasibility (alshawi et al, 1985) <papid> E85-1025 </papid>of driving parsing system directly from the information av~lable in ldoce by constructing dictionary entries for the patr-h system (shieber, 1984).<papid> P84-1075 </papid></nextsent>
<nextsent>it is also clear, however, that it is unrealistic to expect hat on the basis of only the information avail-able in the machine-readable source we will be able to derive fully fleshed out lexical entry, capable of fulfilling all the run-time requirements of the analy-sis system that the lexicon under construction here is intended for.</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V46">
<title id=" P87-1027.xml">the derivation of a grammatically indexed lexicon from the longman dictionary of contemporary english </title>
<section> the  source  data.  </section>
<citcontext>
<prevsection>
<prevsent>happen(s) \[wvs;/zd-is\] (type sraising) warn(1) \[wv4;i0;ti:( o~ aca/m~),sa;d 5a;v3\] (type 3 o~ui) usume(1) \[wv4;tl,sa,b ,x(to be)l,7\] (type 20raising) decline(s) \[ti,s;10\] (type 2 szqul) figure 5: the four semantic types of verb generic lexical template of the form illustrated in figure 4 can clearly be directly mapped into feature duster within the features and feature set declarations used by the dictionary and grammar projects.
</prevsent>
<prevsent>a coln- parison of the existing entries for ~oelieve ~ in the handcrafted lexicon (figure 1) and the third word sense for ~believe extracted from ldoce demonstrates that much of the information available from ldoce is of direct utility - - for example the subcat values can be derived by an analysis of the takes values and the oraie ing logical type specification above.
</prevsent>
</prevsection>
<citsent citstr=" E85-1025 ">
in-deed, we have demonstrated the feasibility (alshawi et al, 1985) <papid> E85-1025 </papid>of driving parsing system directly from the information av~lable in ldoce by constructing dictionary entries for the patr-h system (shieber, 1984).<papid> P84-1075 </papid></citsent>
<aftsection>
<nextsent>it is also clear, however, that it is unrealistic to expect hat on the basis of only the information avail-able in the machine-readable source we will be able to derive fully fleshed out lexical entry, capable of fulfilling all the run-time requirements of the analy-sis system that the lexicon under construction here is intended for.
</nextsent>
<nextsent>3.3 ut l ty f ldoce.
</nextsent>
<nextsent>fo automatic lexicon generation firstly, the information recoverable from ldoce which is of direct utility is not totally reliable.
</nextsent>
<nextsent>errors of omission and assignment occur in the dictionary for example, the entry for aconsider  (figure b) lacks code allowing it to function in frames with sentential complement (eg.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V47">
<title id=" P87-1027.xml">the derivation of a grammatically indexed lexicon from the longman dictionary of contemporary english </title>
<section> the  source  data.  </section>
<citcontext>
<prevsection>
<prevsent>happen(s) \[wvs;/zd-is\] (type sraising) warn(1) \[wv4;i0;ti:( o~ aca/m~),sa;d 5a;v3\] (type 3 o~ui) usume(1) \[wv4;tl,sa,b ,x(to be)l,7\] (type 20raising) decline(s) \[ti,s;10\] (type 2 szqul) figure 5: the four semantic types of verb generic lexical template of the form illustrated in figure 4 can clearly be directly mapped into feature duster within the features and feature set declarations used by the dictionary and grammar projects.
</prevsent>
<prevsent>a coln- parison of the existing entries for ~oelieve ~ in the handcrafted lexicon (figure 1) and the third word sense for ~believe extracted from ldoce demonstrates that much of the information available from ldoce is of direct utility - - for example the subcat values can be derived by an analysis of the takes values and the oraie ing logical type specification above.
</prevsent>
</prevsection>
<citsent citstr=" P84-1075 ">
in-deed, we have demonstrated the feasibility (alshawi et al, 1985) <papid> E85-1025 </papid>of driving parsing system directly from the information av~lable in ldoce by constructing dictionary entries for the patr-h system (shieber, 1984).<papid> P84-1075 </papid></citsent>
<aftsection>
<nextsent>it is also clear, however, that it is unrealistic to expect hat on the basis of only the information avail-able in the machine-readable source we will be able to derive fully fleshed out lexical entry, capable of fulfilling all the run-time requirements of the analy-sis system that the lexicon under construction here is intended for.
</nextsent>
<nextsent>3.3 ut l ty f ldoce.
</nextsent>
<nextsent>fo automatic lexicon generation firstly, the information recoverable from ldoce which is of direct utility is not totally reliable.
</nextsent>
<nextsent>errors of omission and assignment occur in the dictionary for example, the entry for aconsider  (figure b) lacks code allowing it to function in frames with sentential complement (eg.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V49">
<title id=" P91-1015.xml">head corner parsing for discontinuous constituency </title>
<section> in roduct ion.  </section>
<citcontext>
<prevsection>
<prevsent>as in patr ii, gpsg, lfg and most versions of categorial grammar), this assumption is challenged in non-concatenative grammatical formalisms.
</prevsent>
<prevsent>in pollard dissertation several versions of  qlead wrapping  are defined (pollard, 1984).
</prevsent>
</prevsection>
<citsent citstr=" P85-1015 ">
in the analysis of the australian free word-order language guugu yimidhirr, mark johnson uses  combine  predicate in dcg-like grammar that corresponds to the union of words (johnson, 1985).<papid> P85-1015 </papid></citsent>
<aftsection>
<nextsent>mike reape uses an operation called  sequence union  to analyse germanic semi-free word or-der constructions (l~ape, 1989; reape, 1990a).
</nextsent>
<nextsent>other examples include tree adjoining gram-mars (joshi et al, 1975; vijay-shankar and joshi, 1988), and versions of categorial gram-mar (dowry, 1990) and references cited there.
</nextsent>
<nextsent>mot ivat ion.
</nextsent>
<nextsent>there are several motivations for non-concatenative grammars.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V50">
<title id=" P91-1015.xml">head corner parsing for discontinuous constituency </title>
<section> in roduct ion.  </section>
<citcontext>
<prevsection>
<prevsent>non-concatenative grammatical formalisms may also be attractive from computational point of view.
</prevsent>
<prevsent>it is easier to define generation algorithms if the semantics built in systemat-ically constrained way (van noord, 1990b).
</prevsent>
</prevsection>
<citsent citstr=" P89-1002 ">
the semantic-head-driven generation strategy (van noord, 1989; calder ef al., 1989; shieber et al, 1989; <papid> P89-1002 </papid>van noord, 1990a; shieber et al, 1990) <papid> J90-1004 </papid>faces problems in case semantic heads are  dis-placed , and this displacement is analyzed us-ing threading.</citsent>
<aftsection>
<nextsent>however, in this paper sketch simple analysis of verb-second (an example of displacement of semantic heads) by an oper-ation similar to head wrapping which head- driven generator processes without any problems (or extensions) at all.
</nextsent>
<nextsent>clearly, there are also some computational problems, because most  standard  parsing strategies assume context-free concatena-tion of strings.
</nextsent>
<nextsent>these problems are the subject of this paper.
</nextsent>
<nextsent>the task.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V52">
<title id=" P91-1015.xml">head corner parsing for discontinuous constituency </title>
<section> in roduct ion.  </section>
<citcontext>
<prevsection>
<prevsent>non-concatenative grammatical formalisms may also be attractive from computational point of view.
</prevsent>
<prevsent>it is easier to define generation algorithms if the semantics built in systemat-ically constrained way (van noord, 1990b).
</prevsent>
</prevsection>
<citsent citstr=" J90-1004 ">
the semantic-head-driven generation strategy (van noord, 1989; calder ef al., 1989; shieber et al, 1989; <papid> P89-1002 </papid>van noord, 1990a; shieber et al, 1990) <papid> J90-1004 </papid>faces problems in case semantic heads are  dis-placed , and this displacement is analyzed us-ing threading.</citsent>
<aftsection>
<nextsent>however, in this paper sketch simple analysis of verb-second (an example of displacement of semantic heads) by an oper-ation similar to head wrapping which head- driven generator processes without any problems (or extensions) at all.
</nextsent>
<nextsent>clearly, there are also some computational problems, because most  standard  parsing strategies assume context-free concatena-tion of strings.
</nextsent>
<nextsent>these problems are the subject of this paper.
</nextsent>
<nextsent>the task.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V55">
<title id=" P91-1015.xml">head corner parsing for discontinuous constituency </title>
<section> in roduct ion.  </section>
<citcontext>
<prevsection>
<prevsent>the seed of terminal will be that terminal itself.
</prevsent>
<prevsent>other approaches.
</prevsent>
</prevsection>
<citsent citstr=" P85-1021 ">
in (proudian and pollard, 1985) <papid> P85-1021 </papid>head-driven algorithm based on active chart parsing is described.</citsent>
<aftsection>
<nextsent>the details of the al-gorithm are unclear from the paper which makes comparison with our approach ard; it is not clear whether the parser indeed allows forex- ample the head-wrapping operations of pollard (1984).
</nextsent>
<nextsent>reape presented two algorithms (reape, 1990b) which are generalizations of shift-reduce parser, and the cky algorithm, for the same class of grammars.
</nextsent>
<nextsent>i present head-driven bottom-up algorithm for f-lcfr grammars.
</nextsent>
<nextsent>the algorithm resembles the head-driven parser by martin kay (kay, 1989), but is generalized in order to be used for this larger class of grammars.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V56">
<title id=" P91-1015.xml">head corner parsing for discontinuous constituency </title>
<section> in roduct ion.  </section>
<citcontext>
<prevsection>
<prevsent>the disadvan-tages kay noted for his parser do not carry over to this generalized version, as redundant search paths for cf-based grammars turn out to be gen-uine parts of the search space for f-lcfr gram-mars.
</prevsent>
<prevsent>the advantage of my algorithm is that it both employs bottom-up and top-down filtering in straightforward way.
</prevsent>
</prevsection>
<citsent citstr=" E89-1032 ">
the algorithm is closely re-lated to head-driven generators (van noord, 1989; calder et al, 1989; <papid> E89-1032 </papid>shieber et al, 1989; <papid> P89-1002 </papid>van no- ord, 1990a; shieber et ai., 1990).</citsent>
<aftsection>
<nextsent>the algorithm proceeds in bottom-up, head-driven fashion.
</nextsent>
<nextsent>in modern linguistic theories very much information is defined in lexical entries, whereas rules are re-duced to very general (and very uninformative) schemata.
</nextsent>
<nextsent>more information usually implies less search space, hence it is sensible to parse bottom- up in order to obtain useful information as soon as possible.
</nextsent>
<nextsent>furthermore, in many linguistic the-ories special daughter called the head deter-mines what kind of other daughters there may be.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V59">
<title id=" P89-1030.xml">discourse entities in janus </title>
<section> in roduct ion.  </section>
<citcontext>
<prevsection>
<prevsent>discourse entities (des) are descriptions of ob-jects, groups of objects, events, etc. from the real world or from hypothesized or possible worlds that are evoked in discourse.
</prevsent>
<prevsent>any communicative act, be it spoken, written, gestured, or system-initiated, can give rise to des.
</prevsent>
</prevsection>
<citsent citstr=" J86-3001 ">
as discourse progresses, an ade-quate discourse model must represent the relevant entities, and the relationships between them (grosz and sidner, 1986), <papid> J86-3001 </papid>speaker may then felicitously refer anaphoric ally to an object (subject to focusing or centering constraints (grosz et al , 1983, <papid> P83-1007 </papid>sidner 1981, <papid> J81-4001 </papid>1983, brennan et al  1987) <papid> P87-1022 </papid>if there is an existing de representing it, or if corresponding de may be directly inferred from an existing de.</citsent>
<aftsection>
<nextsent>for example, the utterance  every senior in milford high school has car  gives rise to at least 3 entities, describable in english as  the seniors in milford high school ,  milford high school , and  the set of cars each of which is owned by some senior in milford high school .
</nextsent>
<nextsent>these entities may then be accessed by the following next utterances, respectively:  they graduate in june.
</nextsent>
<nextsent> it a good school.
</nextsent>
<nextsent> they completely fill the parking lot.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V60">
<title id=" P89-1030.xml">discourse entities in janus </title>
<section> in roduct ion.  </section>
<citcontext>
<prevsection>
<prevsent>discourse entities (des) are descriptions of ob-jects, groups of objects, events, etc. from the real world or from hypothesized or possible worlds that are evoked in discourse.
</prevsent>
<prevsent>any communicative act, be it spoken, written, gestured, or system-initiated, can give rise to des.
</prevsent>
</prevsection>
<citsent citstr=" P83-1007 ">
as discourse progresses, an ade-quate discourse model must represent the relevant entities, and the relationships between them (grosz and sidner, 1986), <papid> J86-3001 </papid>speaker may then felicitously refer anaphoric ally to an object (subject to focusing or centering constraints (grosz et al , 1983, <papid> P83-1007 </papid>sidner 1981, <papid> J81-4001 </papid>1983, brennan et al  1987) <papid> P87-1022 </papid>if there is an existing de representing it, or if corresponding de may be directly inferred from an existing de.</citsent>
<aftsection>
<nextsent>for example, the utterance  every senior in milford high school has car  gives rise to at least 3 entities, describable in english as  the seniors in milford high school ,  milford high school , and  the set of cars each of which is owned by some senior in milford high school .
</nextsent>
<nextsent>these entities may then be accessed by the following next utterances, respectively:  they graduate in june.
</nextsent>
<nextsent> it a good school.
</nextsent>
<nextsent> they completely fill the parking lot.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V62">
<title id=" P89-1030.xml">discourse entities in janus </title>
<section> in roduct ion.  </section>
<citcontext>
<prevsection>
<prevsent>discourse entities (des) are descriptions of ob-jects, groups of objects, events, etc. from the real world or from hypothesized or possible worlds that are evoked in discourse.
</prevsent>
<prevsent>any communicative act, be it spoken, written, gestured, or system-initiated, can give rise to des.
</prevsent>
</prevsection>
<citsent citstr=" J81-4001 ">
as discourse progresses, an ade-quate discourse model must represent the relevant entities, and the relationships between them (grosz and sidner, 1986), <papid> J86-3001 </papid>speaker may then felicitously refer anaphoric ally to an object (subject to focusing or centering constraints (grosz et al , 1983, <papid> P83-1007 </papid>sidner 1981, <papid> J81-4001 </papid>1983, brennan et al  1987) <papid> P87-1022 </papid>if there is an existing de representing it, or if corresponding de may be directly inferred from an existing de.</citsent>
<aftsection>
<nextsent>for example, the utterance  every senior in milford high school has car  gives rise to at least 3 entities, describable in english as  the seniors in milford high school ,  milford high school , and  the set of cars each of which is owned by some senior in milford high school .
</nextsent>
<nextsent>these entities may then be accessed by the following next utterances, respectively:  they graduate in june.
</nextsent>
<nextsent> it a good school.
</nextsent>
<nextsent> they completely fill the parking lot.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V64">
<title id=" P89-1030.xml">discourse entities in janus </title>
<section> in roduct ion.  </section>
<citcontext>
<prevsection>
<prevsent>discourse entities (des) are descriptions of ob-jects, groups of objects, events, etc. from the real world or from hypothesized or possible worlds that are evoked in discourse.
</prevsent>
<prevsent>any communicative act, be it spoken, written, gestured, or system-initiated, can give rise to des.
</prevsent>
</prevsection>
<citsent citstr=" P87-1022 ">
as discourse progresses, an ade-quate discourse model must represent the relevant entities, and the relationships between them (grosz and sidner, 1986), <papid> J86-3001 </papid>speaker may then felicitously refer anaphoric ally to an object (subject to focusing or centering constraints (grosz et al , 1983, <papid> P83-1007 </papid>sidner 1981, <papid> J81-4001 </papid>1983, brennan et al  1987) <papid> P87-1022 </papid>if there is an existing de representing it, or if corresponding de may be directly inferred from an existing de.</citsent>
<aftsection>
<nextsent>for example, the utterance  every senior in milford high school has car  gives rise to at least 3 entities, describable in english as  the seniors in milford high school ,  milford high school , and  the set of cars each of which is owned by some senior in milford high school .
</nextsent>
<nextsent>these entities may then be accessed by the following next utterances, respectively:  they graduate in june.
</nextsent>
<nextsent> it a good school.
</nextsent>
<nextsent> they completely fill the parking lot.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V71">
<title id=" P89-1030.xml">discourse entities in janus </title>
<section> dependent nps.  </section>
<citcontext>
<prevsection>
<prevsent>we were able to recast her basic ideas in our logical framework, and currently use the generated des extensively.
</prevsent>
<prevsent>the fact that the generation of des is done via structural rules operating on semantic represen-tation provided degree of modularity that allowed our pronoun resolution component to work automatically when we combined new syntactic component with our semantic and discourse com-ponent (replacing an atn by unification grammar, in an independently motivated experiment).
</prevsent>
</prevsection>
<citsent citstr=" P89-1032 ">
we are cur-rently starting to port the degeneration component the bbn spoken language system (boisen et al , 1989), and plan to integrate it with the intra-sentential mechanisms in (ingria and stallard, 1989).<papid> P89-1032 </papid></citsent>
<aftsection>
<nextsent>the fact that entity representations are mostly semantic in na-ture, not syntactic, also facilitated the addition and use of non-linguistic entities in uniform way.
</nextsent>
<nextsent>there are several areas that we would like to study to extend our current treatment.
</nextsent>
<nextsent>we want to address the interactions between centering phenomena and non-linguistic events that affect dis-course focus, such as changing contexts via menu selection in an expert system.
</nextsent>
<nextsent>our paraphrasing component (meteer and shaked, 1988) <papid> C88-2088 </papid>already uses the discourse entities to limited extent.</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V72">
<title id=" P89-1030.xml">discourse entities in janus </title>
<section> dependent nps.  </section>
<citcontext>
<prevsection>
<prevsent>there are several areas that we would like to study to extend our current treatment.
</prevsent>
<prevsent>we want to address the interactions between centering phenomena and non-linguistic events that affect dis-course focus, such as changing contexts via menu selection in an expert system.
</prevsent>
</prevsection>
<citsent citstr=" C88-2088 ">
our paraphrasing component (meteer and shaked, 1988) <papid> C88-2088 </papid>already uses the discourse entities to limited extent.</citsent>
<aftsection>
<nextsent>one area of future work is to have the language generator make more extensive use of them, so it can smoothly refer to focused objects.
</nextsent>
<nextsent>finally, although quantified expressions areal- ready generated in janus for events implicit in many verbs, they are not being used for des.
</nextsent>
<nextsent>we would like to address the problem of event reference and its interaction with temporal information, using ideas such as those in (webber, 1988) <papid> P88-1014 </papid>and in the special issue of computationaj linguistics on tense and aspect (vol.</nextsent>
<nextsent>14, number 2 june 1988).</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V73">
<title id=" P89-1030.xml">discourse entities in janus </title>
<section> dependent nps.  </section>
<citcontext>
<prevsection>
<prevsent>one area of future work is to have the language generator make more extensive use of them, so it can smoothly refer to focused objects.
</prevsent>
<prevsent>finally, although quantified expressions areal- ready generated in janus for events implicit in many verbs, they are not being used for des.
</prevsent>
</prevsection>
<citsent citstr=" P88-1014 ">
we would like to address the problem of event reference and its interaction with temporal information, using ideas such as those in (webber, 1988) <papid> P88-1014 </papid>and in the special issue of computationaj linguistics on tense and aspect (vol.</citsent>
<aftsection>
<nextsent>14, number 2 june 1988).
</nextsent>
<nextsent>8 acknowledgments.
</nextsent>
<nextsent>the work presented here was supported under darpa contract #n00014-85-c-0016.
</nextsent>
<nextsent>the views and conclusions contained in this document are those of the author and should not be interpreted as neces-sarily representing the official policies, either ex-pressed or implied, of the defense advanced research projects agency or of the united states government.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V74">
<title id=" P87-1026.xml">flush a flexible lexicon design </title>
<section> lingulstic/conceptual relations.  </section>
<citcontext>
<prevsection>
<prevsent>figure 3 shows the representation this linguis- tic/conceptual relation.
</prevsent>
<prevsent>this kind of compound lexeme is invoked by the semantic interpreter, rather than by the parser, during process called concretion--making con-cepts more concrete.
</prevsent>
</prevsection>
<citsent citstr=" C86-1130 ">
the scope of this paper does not per-mit discussion of concretion, but refer to \[jacobs, 1986<papid> C86-1130 </papid>b\] for more information.</citsent>
<aftsection>
<nextsent>the descriptions in this section illustrate how flush is able to represent wide range of lexical phenomena in hierarchical and uniform manner.
</nextsent>
<nextsent>the four classes of compound lexemes that are described encompass many of the usually problematic expressions in natural language, yet they are represented in way that supports extension and adaptation.
</nextsent>
<nextsent>the next section describes how these rep-resentations are accessed by flush.
</nextsent>
<nextsent>188 linguistic~conceptual mm~ concept \] di lexeme i lc-give-xxx i gi~ing vl oo.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V78">
<title id=" P87-1026.xml">flush a flexible lexicon design </title>
<section> lingulstic/conceptual relations.  </section>
<citcontext>
<prevsection>
<prevsent>this would happen with  laser printer performance characteristics .
</prevsent>
<prevsent>the phrase  branch manager , like  laser printer characteristics , is interpreted using an intermediate n- try en.zzx-manager.
</prevsent>
</prevsection>
<citsent citstr=" P80-1030 ">
while flush has the capability, like phran \[wilensky and arens, 1980<papid> P80-1030 </papid>b\], to constrain this category with the semantic onstraint hat the first noun must describe bureaucratic unit, it is at present left to the semantic interpreter to determine whether the preced-ing noun can play such an organizational role.</citsent>
<aftsection>
<nextsent>example 2: cancel the transmission to the printer.
</nextsent>
<nextsent>in this example, the lexical access mechanism ust determine that  to the printer  invoked the mod-rel-~zz- to linguistic relation, which can be attached either to the verb  cancel  or the nominal  transmission .
</nextsent>
<nextsent>the seman-tic interpreter then finds the following association: (ref ~rans~er-even~  -  mod-rel-xxx-~o \]9o (destination  -  m_mod-rel-xxx-to)) the ref association above indicates that the object of the preposition  to  is related to the destination role of some generalized transfer event.
</nextsent>
<nextsent>since  cancel  describes no such event, but  transmission  does, trump correctly interprets  printer  as being the destination of the trans-mission.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V79">
<title id=" P89-1002.xml">a semanticheaddriven generation algorithm for unification based formalisms </title>
<section> abstract </section>
<citcontext>
<prevsection>

<prevsent>we present an algorithm for generating strings from logical form encodings that improves upon previous algorithms in that it places fewer restric-tions on the class of grammars to which it is ap-plicable.
</prevsent>
</prevsection>
<citsent citstr=" C88-2128 ">
in particular, unlike an earley deduction generator (shieber, 1988), <papid> C88-2128 </papid>it allows use of seman-tically non monotonic grammars, yet unlike top- down methods, it also permits left-recursion.</citsent>
<aftsection>
<nextsent>the enabling design feature of the algorithm is its im-plicit traversal of the analysis tree for the string being generated in semantic-head-driven fashion.
</nextsent>
<nextsent>the problem of generating well-formed natural- language xpression from an encoding of its mean-ing possesses certain properties which distinguish it from the converse problem of recovering mean-ing encoding from given natural-language ex-pression.
</nextsent>
<nextsent>in previous work (shieber, 1988), <papid> C88-2128 </papid>how- ever, one of us attempted to characterize these differing properties in such way that sin-gle uniform architecture, appropriately parame-terized, might be used for both natural-language processes.</nextsent>
<nextsent>in particular, we developed an archi-tecture inspired by the earley deduction work of pereira and warren (1983) <papid> P83-1021 </papid>but which generalized that work allowing for its use in both parsing and generation mode merely by setting the values of small number of parameters.</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V83">
<title id=" P89-1002.xml">a semanticheaddriven generation algorithm for unification based formalisms </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>the problem of generating well-formed natural- language xpression from an encoding of its mean-ing possesses certain properties which distinguish it from the converse problem of recovering mean-ing encoding from given natural-language ex-pression.
</prevsent>
<prevsent>in previous work (shieber, 1988), <papid> C88-2128 </papid>how- ever, one of us attempted to characterize these differing properties in such way that sin-gle uniform architecture, appropriately parame-terized, might be used for both natural-language processes.</prevsent>
</prevsection>
<citsent citstr=" P83-1021 ">
in particular, we developed an archi-tecture inspired by the earley deduction work of pereira and warren (1983) <papid> P83-1021 </papid>but which generalized that work allowing for its use in both parsing and generation mode merely by setting the values of small number of parameters.</citsent>
<aftsection>
<nextsent>as method for generating natural-language expressions, the earley deduction method is rea-sonably successful along certain dimensions.
</nextsent>
<nextsent>it is quite simple, general in its applicability to range of unification-based and logic grammar for-malisms, and uniform, in that it places only one restriction (discussed below) on the form of the lin-guistic analyses allowed by the grammars used in generation.
</nextsent>
<nextsent>in particular, generation from gram-mars with recur sions whose welbfoundedness relies on lexical information will terminate; top-down generation regimes such as those of wedekind (1988) <papid> C88-2150 </papid>or dymetman and isabelle (1988) lack this property, discussed further in section 3.1.</nextsent>
<nextsent>unfortunately, the bottom-up, left-to-right pro-cessing regime of earley generation--as it might be called--has its own inherent frailties.</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V85">
<title id=" P89-1002.xml">a semanticheaddriven generation algorithm for unification based formalisms </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>as method for generating natural-language expressions, the earley deduction method is rea-sonably successful along certain dimensions.
</prevsent>
<prevsent>it is quite simple, general in its applicability to range of unification-based and logic grammar for-malisms, and uniform, in that it places only one restriction (discussed below) on the form of the lin-guistic analyses allowed by the grammars used in generation.
</prevsent>
</prevsection>
<citsent citstr=" C88-2150 ">
in particular, generation from gram-mars with recur sions whose welbfoundedness relies on lexical information will terminate; top-down generation regimes such as those of wedekind (1988) <papid> C88-2150 </papid>or dymetman and isabelle (1988) lack this property, discussed further in section 3.1.</citsent>
<aftsection>
<nextsent>unfortunately, the bottom-up, left-to-right pro-cessing regime of earley generation--as it might be called--has its own inherent frailties.
</nextsent>
<nextsent>efficiency considerations require that only grammars pos-sessing property of semantic monotonicity can be effectively used, and even for those grammars, processing can become overly nondeterministic.
</nextsent>
<nextsent>the algorithm described in this paper is an at-tempt to resolve these problems in satisfactory manner.
</nextsent>
<nextsent>although we believe that this algorithm could be seen as an instance of uniform archi-tecture for parsing and generation--just as the extended earley parser (shieber, 1985<papid> P85-1018 </papid>b) and the bottom-up generator were instances of the general-ized earley deduction architecture= our efforts to date have been aimed foremost oward the devel-opment of the algorithm for generation alone.</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V88">
<title id=" P89-1002.xml">a semanticheaddriven generation algorithm for unification based formalisms </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>efficiency considerations require that only grammars pos-sessing property of semantic monotonicity can be effectively used, and even for those grammars, processing can become overly nondeterministic.
</prevsent>
<prevsent>the algorithm described in this paper is an at-tempt to resolve these problems in satisfactory manner.
</prevsent>
</prevsection>
<citsent citstr=" P85-1018 ">
although we believe that this algorithm could be seen as an instance of uniform archi-tecture for parsing and generation--just as the extended earley parser (shieber, 1985<papid> P85-1018 </papid>b) and the bottom-up generator were instances of the general-ized earley deduction architecture= our efforts to date have been aimed foremost oward the devel-opment of the algorithm for generation alone.</citsent>
<aftsection>
<nextsent>we will have little to say about its relation to parsing, leaving such questions for later research.1
</nextsent>
<nextsent>rithm as does the earley-based generator, the new algo-rithm assumes that the grammar is unification- based or logic grammar with phrase-structure backbone and complex nonterminms.
</nextsent>
<nextsent>further- more, and again consistent with previous work, we assume that the nonterminals associate to the phrases they describe logical expressions encoding their possible meanings.
</nextsent>
<nextsent>we will describe the al-gorithm in terms of an implementation it for definite-clause grammars (dcg), although we be- martin kay (personal communication) has developed parsing algorithm that seems to be the parsing correlate to the generation algorithm presented here.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V89">
<title id=" P89-1002.xml">a semanticheaddriven generation algorithm for unification based formalisms </title>
<section> applicability of the algo-.  </section>
<citcontext>
<prevsection>
<prevsent>a variant of our method is used in van no- ord bug (bottom-up generator) system, part of mimo2, an experimental machine translation system for translating international news items of teletext, which uses prolog version of pati~-ii similar to that of hirsh (1987).
</prevsent>
<prevsent>according to mar-tin kay (personal communication), the strep machine translation project at the center for the study of language and information uses ver-sion of our algorithm to generate with respect grammars based on head-driven phrase-structure grammar (hpsg).
</prevsent>
</prevsection>
<citsent citstr=" E89-1032 ">
finally, calder et al (1989) <papid> E89-1032 </papid>report on generation algorithm for unification categorial grammar that appears to be special case of ours.</citsent>
<aftsection>
<nextsent>generators existing generation algorithms have efficiency or termination problems with respect to certain classes of grammars.
</nextsent>
<nextsent>we review the problems of both top-down and bottom-up regimes in this sec-tion.
</nextsent>
<nextsent>3.1 rob lems i th top-down gen- ra tors consider naive top-down generation mechanism that takes as input the semantics to generate from and corresponding syntactic ategory and builds complete tree, top-down, left-to-right by apply-ing rules of the grammar non deterministically to the fringe of the expanding tree.
</nextsent>
<nextsent>this control regime is realized, for instance, when running dcg  backwards  as generator.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V96">
<title id=" P89-1002.xml">a semanticheaddriven generation algorithm for unification based formalisms </title>
<section> the new algor thm.  </section>
<citcontext>
<prevsection>
<prevsent>identity checks like this one must be implemented correctly in the generator by using sound unification algorithm with the occurs check.
</prevsent>
<prevsent>(the default unification in most prolog systems is unsound in this respect.)
</prevsent>
</prevsection>
<citsent citstr=" J81-4003 ">
for example, grammar with gap-threading treat-ment of wh-movement (pereira, 1981; <papid> J81-4003 </papid>pereira and shieber, 1985<papid> P85-1018 </papid>) might include the rule np(agr, \[np(agr)/semlx\]-x)/sem---  \[\].</citsent>
<aftsection>
<nextsent>stating that an np with agreement agr and se-mantics sera can be empty provided that the list of gaps in the np can be represented as the difference list \[np(agr)/semlx\]-x, that is the list contain-ing an np gap with the same agreement features agr (pereira and shieber, 1985<papid> P85-1018 </papid>, p. 128).</nextsent>
<nextsent>because the above rule is non chain rule, it will be consid-ered when trying to generate any nongap np, such as the proper noun np(3-s ing,g-g) / john.</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V103">
<title id=" P89-1002.xml">a semanticheaddriven generation algorithm for unification based formalisms </title>
<section> extensions.  </section>
<citcontext>
<prevsection>
<prevsent>the rules outlined here are less efficient than necessary because the distribution of store ele-ments among the subject and complements of verb does not check whether the variable bound by store element actually appears in the seman-tics of the phrase to which it is being assigned, leading to many dead ends in the generation pro-cess.
</prevsent>
<prevsent>also, the rules are sound for generation but not for analysis, because they do not enforce the constraint hat every occurrence of variable in logical form be outs coped by the variable binder.
</prevsent>
</prevsection>
<citsent citstr=" J87-1005 ">
adding appropriate side conditions to the rules, following the constraints discussed by hobbs and shieber (hobbs and shieber, 1987) <papid> J87-1005 </papid>would not be difficult.</citsent>
<aftsection>
<nextsent>6.3 postponing lexical choice.
</nextsent>
<nextsent>as it stands, the generation algorithm chooses par-ticular lexical forms on-line.
</nextsent>
<nextsent>this approach can lead to certain amount of unnecessary nonde- terminism.
</nextsent>
<nextsent>for instance, the choice of verb form might depend on syntactic features of the verb subject available only after the subject has been generated.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V105">
<title id=" P89-1015.xml">acquiring disambiguation rules from text </title>
<section> categorial ambiguity.  </section>
<citcontext>
<prevsection>
<prevsent>118 fortunately, there is reason to believe that lex-ical disambiguation can proceed on more limited syntactic patterns.
</prevsent>
<prevsent>indeed, recent increased inter-est in the problem of disambiguating lexical cat-egory in english has led to significant progress in developing effective programs for assigning lexi-cal category in unrestricted text.
</prevsent>
</prevsection>
<citsent citstr=" J88-1003 ">
the most suc-cessful and comprehensive of these are based on probabilistic modeling of category sequence and word category (church 1987; garside, leech and sampson 1987; derose 1988).<papid> J88-1003 </papid></citsent>
<aftsection>
<nextsent>these stochastic methods show impressive performance: church re-ports success rate of 95 to 99%, and shows sample text with an error rate of less than one percent.
</nextsent>
<nextsent>what may seem particularly surprising is that these methods succeed essentially with- out reference to syntactic structure; purely sur-face lexical patterns are involved.
</nextsent>
<nextsent>in contrast to these recent stochastic methods, earlier meth-ods based on categorical rules for surface patterns achieved only moderate success.
</nextsent>
<nextsent>thus for exam-ple, klein and simmons (1963) and greene and rubin (1971) report success rates considerably be- low recent stochastic approaches.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V106">
<title id=" P89-1015.xml">acquiring disambiguation rules from text </title>
<section> lexical isambiguat ion in.  </section>
<citcontext>
<prevsection>
<prevsent>no algorithm~ symbolic or otherwise, will succeed in large scale processing of natural text unless it can acquire some of the needed knowledge from sam- pies of naturally occurring text.
</prevsent>
<prevsent>a deterministic parser the focus of this paper is the problem of disam- biguating lexical category (part of speech) within deterministic parser of the sort originated by marcus (1980).
</prevsent>
</prevsection>
<citsent citstr=" P83-1019 ">
fid ditch is one such deterministic parser, designed to provide syntactic analysis of text as tool for locating examples of various lin- guisticauy interesting structures (hindle 1983).<papid> P83-1019 </papid></citsent>
<aftsection>
<nextsent>it has gradually been modified over the past several years to improve its ability to handle unrestricted text.
</nextsent>
<nextsent>fid ditch is designed to provide an annotated surface structure.
</nextsent>
<nextsent>it aims to build phrase structure trees, recovering complement relations and gapped elements.
</nextsent>
<nextsent>it has ? lexicon of about 100,000 words listing all possible parts of speech for each word, along with root forms for inflected words.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V107">
<title id=" P89-1015.xml">acquiring disambiguation rules from text </title>
<section> lexical isambiguat ion in.  </section>
<citcontext>
<prevsection>
<prevsent>it has been my experience that the disambigna- tion rule set is particularly difficult to improve by hand.
</prevsent>
<prevsent>the disambiguation rules make less syn-tactic sense than the regular grammar ules, and therefore the effect of adding or deleting rule on the parser performance is hard to predict.
</prevsent>
</prevsection>
<citsent citstr=" J86-1001 ">
in the long run it is likely that these disambignation rules should be done away with, substituting dis-ambiguation by side effect as proposed by milne (1986).<papid> J86-1001 </papid></citsent>
<aftsection>
<nextsent>but in the meantime, we are faced with the need to improve this model of lexical disana- big nation for determinhtic parser.
</nextsent>
<nextsent>the model of deterministic parsing proposed by marcus (1980) has several properties that aid in acquisition of symbolic rules for syntactic analy-sis, and provide natural way to resolve the twin problems of discovering a) when it is necessary to acquire new rule, and b) what new rule to ac-quire (see the discussion in berwick 1985).
</nextsent>
<nextsent>the key features of this niodel of parsing relevant acquisition are: ? because the parser is deterministic and has limited window of attention, failure (and therefore the need for new rule) can be lo-calized.
</nextsent>
<nextsent>because the rules of the parser correspond closely to the instantaneous description of the state of the parser, it is easy to determine the form of the new rule.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V108">
<title id=" P91-1028.xml">multiple default inheritance in a unification based lexicon </title>
<section> c lasses  and  inher tance   </section>
<citcontext>
<prevsection>
<prevsent>forex- ample, if an  in transitive  class is used to express the common syntactic properties hared by all in- transitive verbs, then particular instances of in- transitive verbs can be made to inherit this infor-mation by specifying the  in transitive  class as one of their super classes - it then becomes unneces- saw to specify the relevant properties individually for each such verb.
</prevsent>
<prevsent>the lexicon may be thought of as tangled hierarchy of classes linked by in-heritance paths, with, at the most specific level, lexicai classes and, at the most general, classes for which no super classes have been defined, and which therefore inherit no information from elsewhere.
</prevsent>
</prevsection>
<citsent citstr=" E89-1025 ">
s  environnement linguistique unlfication  - see esti-val (1990), and, for description of the earlier ud system on which e~u is based, johnson and rosner (1989).<papid> E89-1025 </papid></citsent>
<aftsection>
<nextsent>215 lexical entries are themselves classes, 4 and any in-formation they contain is standardly specific to an individual word; lexical and non-lexical classes dif-fer in that analysis and generation take only the former as entry points to the lexicon.
</nextsent>
<nextsent>inheritance of feature value from super class may be overridden by conflicting value for that feature in more specific lass.
</nextsent>
<nextsent>this means, forex- ample, that it is possible to place in the class which expresses general properties of verbs an equation such as   * aux  = no  (i.e.  typical verbs are not auxiliaries ), while placing the contradictory spec-ification   * aux  = yes  in subclass from which only antiliaries inherit.
</nextsent>
<nextsent>the ability to encode ex-ceptional properties of lexical items is extremely attractive from the linguistic point of view; the lower the position in the hierarchy at which the property appears, the more exceptional it may be considered.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V109">
<title id=" P91-1028.xml">multiple default inheritance in a unification based lexicon </title>
<section> c lasses  and  inher tance   </section>
<citcontext>
<prevsection>
<prevsent>with regard to (i), each of the fss in that can unify with ~b does so - those that cannot, because they conflict with information already present, are ignored.
</prevsent>
<prevsent>the condition requiring ~ to be unifiable with the result of unifying the elements of ? takes account of the potential order-sensitivity of the de-faulting operation - only those main sets having this property can be applied without regard to or- def.
</prevsent>
</prevsection>
<citsent citstr=" P90-1021 ">
if this condition is met then the application of defaults always succeeds, producing feature structure which, if no member of the default set is applicable, is identical to ~b. this interpretation of default unification is essentially that of bouma (1990).<papid> P90-1021 </papid></citsent>
<aftsection>
<nextsent>the super class extension e(~, c) is formed by applying to ~ any default equations in the main set of c, and then applying to the result each variant set in c; for variant sets vl,..
</nextsent>
<nextsent>v,,, the result of this 7 u  here denotes the unification of and b,   denotes the most general,  empty  fs, which unifies with all others, and  _l  denotes the inconsistent fs, equated with failure of unification.
</nextsent>
<nextsent>217 second stage is the set of fss {@1,...@~}, where each ~ is the result of successfully unifying ~b with some different vj.
</nextsent>
<nextsent>to speak in procedural terms, the global exten-sion of lexicai class with the cpl is com-puted as follows: is the empty fs which is input to c; each c~ in yields as its superelass extension set of fss, each member of which is input to the remainder of c, (c~+l, . . .c , ) . the global exten-sion of is then the yield of the most general class in its cpl - expressed in slightly different way, the global extension of is the result of applying to the cpl of l. it is possible to exert quite fine control over in- heritance; one property may override another when assigned in main equation set, but cause failure when assigned in variant set.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V110">
<title id=" P91-1028.xml">multiple default inheritance in a unification based lexicon </title>
<section> c lasses  and  inher tance   </section>
<citcontext>
<prevsection>
<prevsent>217 second stage is the set of fss {@1,...@~}, where each ~ is the result of successfully unifying ~b with some different vj.
</prevsent>
<prevsent>to speak in procedural terms, the global exten-sion of lexicai class with the cpl is com-puted as follows: is the empty fs which is input to c; each c~ in yields as its superelass extension set of fss, each member of which is input to the remainder of c, (c~+l, . . .c , ) . the global exten-sion of is then the yield of the most general class in its cpl - expressed in slightly different way, the global extension of is the result of applying to the cpl of l. it is possible to exert quite fine control over in- heritance; one property may override another when assigned in main equation set, but cause failure when assigned in variant set.
</prevsent>
</prevsection>
<citsent citstr=" E89-1008 ">
normally, variant sets are defined so as to be mutually exclusive; fs that unifies with more than one of the variant sets is in effect multiplied, the inheritance systems of calder (1989) <papid> E89-1008 </papid>and flickinger (1987) make use of lexical rules - the elu lexicon does not provide such devices, although some of their functionality may be reproduced by the variant set mechanism.</citsent>
<aftsection>
<nextsent>the approach described here differs from some previous proposals for default inheritance in unification-based lexicons in that the process of building fss is monotonic - classes may add infor-mation to fs, but are unable to remove or alter it.
</nextsent>
<nextsent>thus, given cpl (c , . . .
</nextsent>
<nextsent>c . ) , any fs admit-ted by class c~ subsumes every fs that can be cre-ated by applying to the classes (c~ + , . . .
</nextsent>
<nextsent>c,~), n. karttunen (1986) <papid> C86-1016 </papid>and shieber (1986) describe systems in which fss may be modified by default statements in such way that this property does not automatically hold.</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V111">
<title id=" P91-1028.xml">multiple default inheritance in a unification based lexicon </title>
<section> c lasses  and  inher tance   </section>
<citcontext>
<prevsection>
<prevsent>thus, given cpl (c , . . .
</prevsent>
<prevsent>c . ) , any fs admit-ted by class c~ subsumes every fs that can be cre-ated by applying to the classes (c~ + , . . .
</prevsent>
</prevsection>
<citsent citstr=" C86-1016 ">
c,~), n. karttunen (1986) <papid> C86-1016 </papid>and shieber (1986) describe systems in which fss may be modified by default statements in such way that this property does not automatically hold.</citsent>
<aftsection>
<nextsent>these schemes permit default statements to override the effect of ear-lier statements, whereas default information in the elu lexicon may itself be overridden.
</nextsent>
<nextsent>we now turn to some examples illustrating the r61e of defeasible inheritance in the lexicon.
</nextsent>
<nextsent>3.1 german separable verbs.
</nextsent>
<nextsent>two large classes of german verbs are the sep-arable and inseparable prefixed compound verbs.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V113">
<title id=" P90-1035.xml">deterministic left to right parsing of tree adjoining languages </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>for natural language process-ing, although lr(k) parsers are not powerful enough, *the first author is partially supported by darpa grant n0014-85- k0018, aro grant daal03-89-c-003ipri nsf grant-iris4-10413 a02.
</prevsent>
<prevsent>we are extremely grateful to bernard lang and david weir for their valuable suggestions.
</prevsent>
</prevsection>
<citsent citstr=" J87-1004 ">
276 conflicts between multiple choices are solved by pseudo- parallelism (lang, 1974, tomita, 1987).<papid> J87-1004 </papid></citsent>
<aftsection>
<nextsent>this gives rise to class of powerful yet efficient parsers for natural languages.
</nextsent>
<nextsent>it is in this context that we study determin-istic (lr(k)-style) parsing of tags.
</nextsent>
<nextsent>the set of tree adjoining languages a strict su-perset of the set of context free languages (cfls).
</nextsent>
<nextsent>for example, the cross serial dependency constmction in dutch can be generated by tag.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V114">
<title id=" P90-1035.xml">deterministic left to right parsing of tree adjoining languages </title>
<section> lr(0) parsing tables.  </section>
<citcontext>
<prevsection>
<prevsent>this section explain how to construct an lr(0) parsing table given tag.
</prevsent>
<prevsent>the construction is an extension of the one used for cfgs.
</prevsent>
</prevsection>
<citsent citstr=" P88-1032 ">
similarly to schabes and joshi (1988), <papid> P88-1032 </papid>we extend the notion of dotted rules to trees.</citsent>
<aftsection>
<nextsent>we define the closure operations that correspond to adjunction.
</nextsent>
<nextsent>then we explain how transitions between states are defined.
</nextsent>
<nextsent>we give in figure 5 an example of finite state automaton used to build the parsing table for tag (see figure 5) generating context-sensitive language.
</nextsent>
<nextsent>we first explain preliminary concepts (originally de-fined to construct an earley-type parser for tags) that will be used by the algorithm.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V116">
<title id=" P86-1005.xml">semantic acquisition in tell a transportable user customized natural language processor </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>in addition to the potential practical benefits of user-customized interface, we feel that well- conceived transportability projects can make useful scientific contributions to computational linguistics since single-domain systems and, to lesser extent, systems adapted over weeks or months by their designers, afford opportunities to circumvent, rather than squarely address, important issues concerning (a) the precise nature of the formalisms the system is designed around, and (b) the interactions among system modules.
</prevsent>
<prevsent>although customization efforts offer no guarantee against ad-hoc design or sloppy implementation, problems of the type mentioned above are less likely to go unnoticed when dealing with system whose domain-specific information is supplied at run-time, especially when that information is being provided by the actual users of the system.
</prevsent>
</prevsection>
<citsent citstr=" P84-1013 ">
by way of overview, we note that the tel system derives from previous work on the ldc project, as documented in ballard (1982), ballard (1984), <papid> P84-1013 </papid>ballard, lusth and tinkham (1984).</citsent>
<aftsection>
<nextsent>and ballard and tinkham (1984).<papid> J84-2001 </papid></nextsent>
<nextsent>the initial prototype of teli . which runs on symbol ics lisp machine, is designed to answer english questions about information stored in one or more tables, (i.e. first- normal-form relational database).</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V117">
<title id=" P86-1005.xml">semantic acquisition in tell a transportable user customized natural language processor </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>although customization efforts offer no guarantee against ad-hoc design or sloppy implementation, problems of the type mentioned above are less likely to go unnoticed when dealing with system whose domain-specific information is supplied at run-time, especially when that information is being provided by the actual users of the system.
</prevsent>
<prevsent>by way of overview, we note that the tel system derives from previous work on the ldc project, as documented in ballard (1982), ballard (1984), <papid> P84-1013 </papid>ballard, lusth and tinkham (1984).</prevsent>
</prevsection>
<citsent citstr=" J84-2001 ">
and ballard and tinkham (1984).<papid> J84-2001 </papid></citsent>
<aftsection>
<nextsent>the initial prototype of teli . which runs on symbol ics lisp machine, is designed to answer english questions about information stored in one or more tables, (i.e. first- normal-form relational database).
</nextsent>
<nextsent>a sample view of the display screen during session with tell . which may give the flavor of how the system operates, is shown in figure information on some aspects of knowledge acquisition not discussed in this paper.
</nextsent>
<nextsent>particularly with regard to syntactic case frames, can be found in ballard (1986).<papid> C86-1108 </papid></nextsent>
<nextsent>the syntactic and semantic models adopted for tel1 are intended to provide unified treatment of broad and extendible class of word and phrase types.</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V118">
<title id=" P86-1005.xml">semantic acquisition in tell a transportable user customized natural language processor </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>the initial prototype of teli . which runs on symbol ics lisp machine, is designed to answer english questions about information stored in one or more tables, (i.e. first- normal-form relational database).
</prevsent>
<prevsent>a sample view of the display screen during session with tell . which may give the flavor of how the system operates, is shown in figure information on some aspects of knowledge acquisition not discussed in this paper.
</prevsent>
</prevsection>
<citsent citstr=" C86-1108 ">
particularly with regard to syntactic case frames, can be found in ballard (1986).<papid> C86-1108 </papid></citsent>
<aftsection>
<nextsent>the syntactic and semantic models adopted for tel1 are intended to provide unified treatment of broad and extendible class of word and phrase types.
</nextsent>
<nextsent>by providing for an  extendible  class of constructs, we make the knowledge acquisition module oftel independent of the natural language portion of the system, whose earlier version has been described in ballard and tinkham (1984) <papid> J84-2001 </papid>and ballard.</nextsent>
<nextsent>lusth.</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V122">
<title id=" P86-1005.xml">semantic acquisition in tell a transportable user customized natural language processor </title>
<section> semantic processing in teli.  </section>
<citcontext>
<prevsection>
<prevsent>since ir structures are built around the word and phrase types of the english being dealt with, and since the meanings of words and phrases are stored globally, ir structures should not be regarded as  knowledge representation  in the sense of kl-one, logical form.
</prevsent>
<prevsent>and so forth.
</prevsent>
</prevsection>
<citsent citstr=" A83-1006 ">
systems similar in goals to tel but which revolve around logical form include team (grosz, 1983; <papid> A83-1006 </papid>grosz, appelt . martin, and pereira 1985), irus (bates and bobrow, 1983; bates, moser, and stallard 1984), and tqa (plath, 1976; damerau, 1985).</citsent>
<aftsection>
<nextsent>one system similar to tel in building intermediate structures that contain references to language-specific concepts is datalog (hafner and godden.
</nextsent>
<nextsent>1985).
</nextsent>
<nextsent>when user asks tel1 to begin learning about new domain, the system spends from five to thirty minutes, depending on the complexity of the application, obtaining basic information about each table in the the database (see figure 2).
</nextsent>
<nextsent>users are first asked to give the key column of the table.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V123">
<title id=" P86-1005.xml">semantic acquisition in tell a transportable user customized natural language processor </title>
<section> relation to similarly motivated systems.  </section>
<citcontext>
<prevsection>
<prevsent>in seeking to allow for customization by end users, as opposed to (say) database administrator (cf.
</prevsent>
<prevsent>thompson and thompson, 1975, 1983, 1985; johnson, 1985).
</prevsent>
</prevsection>
<citsent citstr=" A83-1003 ">
some of the systems which, like tel1, seek to provide for user customization within the context of database query are ask (thompson and thompson 1983, <papid> A83-1003 </papid>1985).</citsent>
<aftsection>
<nextsent>formerly rel (thompson and thompson, 1975).
</nextsent>
<nextsent>from caltech; intellect, formerly robot (harris, 1977), marketed by artificial intelligence corporation; irus (bates and bobrow, 1983; bates.
</nextsent>
<nextsent>moser, and stallard 1984), from bbn laboratories; tqa (damerau, 1985).
</nextsent>
<nextsent>formerly request (plath, 1976), from ibm yorktown heights; team (grosz.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V124">
<title id=" P87-1010.xml">constituent based morphological parsing a new approach to the problem of word recognition </title>
<section> introduction </section>
<citcontext>
<prevsection>
<prevsent>not only are phonological rules finite state, but the control structure of the model is itself finite state.
</prevsent>
<prevsent>two criticisms of this model can be put forth.
</prevsent>
</prevsection>
<citsent citstr=" P86-1009 ">
first, kimmo is not guaranteed to be computationally efficient (barton, 1986).<papid> P86-1009 </papid></citsent>
<aftsection>
<nextsent>second, there are many interesting morphological phenomena that kimmo cannot cover without significantly redesigning the model.
</nextsent>
<nextsent>in this paper we will address the second point.
</nextsent>
<nextsent>we will present model of word-structure recognition which, unlike the kimmo model, makes heavy use of prosodic constituent structure.
</nextsent>
<nextsent>not only is reference to prosodic constituency necessary to provide principled way of dealing with certain morphological processes, but such an approach to phonological processing is crucial for any interface of current parsing systems with speech recognition systems (church, 1983).
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V125">
<title id=" P91-1029.xml">metaphoric generalization through sort coercion </title>
<section> refinement in the king.  </section>
<citcontext>
<prevsection>
<prevsent>the mechanism has the same advantage over the work of jacobs and martin.
</prevsent>
<prevsent>5.1 jacobs and marin.
</prevsent>
</prevsection>
<citsent citstr=" P87-1026 ">
in series of papers (besemer and jacobs, 1987; <papid> P87-1026 </papid>jacobs, 1986; jacobs, 1987), paul jacobs has de-veloped relationship he calls view.</citsent>
<aftsection>
<nextsent>views express relationship between event types that implements metaphoric extension.
</nextsent>
<nextsent>for example, in order to handle examples like  the command takes three arguments ~, he defines the following view: (view execute-operation causal-doubl e-trans~ er (role-piay input object-l) (role-play output object-2) (role-play user source- ) (role-play operation source-2)) snote that shadows always embody dlsjointness between at least one of their arguments and those in the ideal mean-ing.
</nextsent>
<nextsent>thus, no input relation can be simultaneously inter-preted both as subsumed relation and as shadow.
</nextsent>
<nextsent>in jacobs  system, this view would incorporate the metaphorical mappings from the full range of expressions referring to exchange operations such as giving, buying, and selling.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
<cited id="V126">
<title id=" P91-1029.xml">metaphoric generalization through sort coercion </title>
<section> refinement in the king.  </section>
<citcontext>
<prevsection>
<prevsent>however, they provide no com-putational support for evaluating novel uses.
</prevsent>
<prevsent>5.2 gentner t al..
</prevsent>
</prevsection>
<citsent citstr=" T87-1036 ">
gentner structure-mapping techniques (gen- tner, 1983; gentner et al 1987) <papid> T87-1036 </papid>are applicable mostly to explicit analogies uch as  an electric battery is like reservoir. </citsent>
<aftsection>
<nextsent>her approach, imple-mented by falkenhainer and forbus (1986), maps the structure of the source of the metaphor to the structure of the target by creating match hypothe-ses between relational representations of the base and target using set of match construction rules.
</nextsent>
<nextsent>but the central example of match construction 226 rule seems to require that the names of the predi-cates in the facts being matched be identical.
</nextsent>
<nextsent>un-der this sort of construction rule, it is possible to derive metaphoric mapping only if the names of the predicates have been set up to encode the metaphor ahead of time.
</nextsent>
<nextsent>under this system, it is not possible to deduce new metaphors; in fact, one can only recognize them if the metaphoric link has been made but not recorded.
</nextsent>
</aftsection>
</citcontext>
<tag> </tag>
</cited>
</paper>