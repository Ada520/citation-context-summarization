26	this idea is based on that of for a qa system. 
12	we chose the state of the art algorithm described in with the following slight modification. 
17	consequently, rote extractors have been identified as an appropriate method to look for textual contexts that happen to convey a certain relation between two concepts. 
50	ravichandran and hovy have noted that this might be dangerous if the wildcard matches unrestrictedly incorrect sentences. 
5	this makes ures patterns much more general, and allows to recognize instances in sentences inaccessible to the simple surface patterns of systems such as . 
4	for example, ravichandran and hovy learns rules based on simple surface patterns. 
72	for instance, ravichandran and hovy report the following patterns for the relationships inventor, discoverer and location: relation prec. 
23	in particular, the methodology proposed by ravichandran and hovy requires no parsing or other language specific resources, so is an ideal candidate for multilingual use. 
57	 used pairs of questions and answers to obtain varied patterns which give the same answer. 
63	since exhaustive processing of the web is not feasible, and attempted bootstrapping approaches, which resemble the mutual bootstrapping method for information extraction of . 
10	we compared our system against our reimplementation of ravichandran and hovy’s paraphrase learning. 
67	ravichandran also explored a similar method for question answering . 
62	for example, the following patterns are reported by ravichandran and hovy for identifying the relations inventor, discoverer and location: relation prec. 
59	more recently this method has been applied for structuring terminology in isa hierarchies and for learning question-answering patterns . 
54	as referred to in the introduction, ravichandran and hovy present a method to identify surface text patterns using a web search engine. 
25	for example, the year of birth of a person is typically expressed using one of these phrases: <name> was born in <birthyear> <name> we have developed a method to learn such patterns automatically from text on the web . 
28	qa researchers have explored a variety of uses of the web, ranging from surface pattern mining , query formulation , answer validation , to directly finding answers on the web by data redundancy analysis . 
8	ravichandran and hovy focus on scaling relation extraction to the web. 
53	in order to train a rote extractor from the web, this procedure is mostly used :/
15	but it is almost impossible to learn such surface text patterns following . 
20	question, we add the word “is usually”, “refers to”, etc. we learn these clue words using the similar method proposed in . 
16	ravichandran and hovy proposed automatically learning surface text patterns for answer extraction. 
21	for the special case of rote extractors, a more attractive alternative has been proposed by brin , agichtein and gravano , and ravichandran and hovy . 
43	it is interesting to note that, as could be expected, for those targets for which there is no entity type defined , ravichandran and hovy ’s extracts many errors, because it is not possible to apply the named entity recognizer to clean up the results, and the accuracy remains below 10%. 
34	we assume that the system has used the seed list to extract and generalise a set of patterns for each of the relations using training corpora . 
7	rh02: the algorithm by ravichandran and hovy described in section 2. • gi03: the algorithm by girju et al described in section 2. pr04: the algorithm by pantel and ravichandran described in section 2. • esp-: the espresso algorithm using the pattern and instance reliability measures, but without using generic patterns. 
32	in addition to their use for learning lexical semantic relations, patterns were commonly used to learn instances of concrete semantic relations for information extraction and qa, as in . 
45	to date, researchers have harvested, with varying success, several resources, including concept lists , topic signatures , facts , and word similarity lists . 
42	in this case, ravichandran and hovy patterns resulted more precise as they do not contain disjunctions or wildcards. 
48	several qa systems have investigated the use of text patterns for qa , , . 
38	several similar approaches have been proposed , with various applications: question-answering , multi-document named entity coreference , and generating biographical information . 
27	unsupervised methods for similar tasks include agichtein and gravano’s work, which shows that clusters of vector-spacebased patterns can be successfully employed to detect speci c ie relationships , and ravichandran and hovy’s algorithm for nding patterns for a question answering task. 
70	ravichandran and hovy presents a method that learns patterns from online data using some seed questions and answer anchors. 
18	while some qa systems are promising , they can only handle factual questions as in trec , and the context for the whole task is largely not considered. 
56	although semantics-poor techniques, such as surface pattern matching or statistical methods , have been successful in answering factoid questions, more complex tasks require a consideration of text meaning. 
22	ravichandran and hovy present an alternative ontology for type preference and describe a method for using this alternative ontology to extract particular answers using surface text patterns. 
55	this may just be the m characters to the left or to the right, , the longest common substring of several contexts , or all substrings obtained with a suffix tree constructor . 
19	ravichandran and hovy present a method to automatically learn surface text patterns expressing relations between instances of classes using a search engine. 
65	in this field as well, the use of pre-defined sets of relation patterns has proved fairly reliable, particularly in the case of factoid type queries . 
46	most works that attempt to learn such concrete lexical semantic relations employ a co-occurrence pattern-based approach . 
60	in this paper, we employ and extend the method described by ravichandran and hovy shown in figure 1. 
66	hearst was the first followed by recent larger-scale and more fully automated efforts . 
58	the use of lexical patterns to identify answers in corpus-based qa received lots of attention after a team taking part in one of the earlier qa tracks at trec showed that the approach was competitive at that stage . 
49	the only group that can learn arbitrary binary relations is the group of pattern matching systems . 
44	to obtain such a corpus ravichandran and hovy mine the web to gather the relevant data. 
39	on the other hand, we have rerun ravichandran and hovy ’s algorithm on our corpus. 
9	this method was first described in ravichandran and hovy . 
47	the approach followed for the generalisation is the one described by , which has a few modifications with respect to ravichandran and hovy 's, such as the use of the wildcard * to represent any sequence of words, and the addition of part-of-speech and named entity labels to the patterns. 
35	several existing works have tried to extract a certain type of relation by manually choosing different pairs of entities . 
31	our approach extends previously formulated ones that use surface patterns as indicators of semantic relations between nouns . 
40	see fleischman and hovy for techniques useful in disambiguating such instances. 
24	table 5: inclusion precision on the same test corpus for our approach and ravichandran and hovy ’s. 
52	an interesting approach is that of rote extractors , which look for textual contexts that happen to convey a certain relationship between two concepts. 
11	for example, the simple subordinate clause in the following example ) can already prevent a surface pattern matcher from discovering a relation between ”london” and the ”river thames”: ”london, which has one of the busiest airports in the world, lies on the banks of the river thames.” 
71	year> extractions of <person> with potential <birth years> web pages w/<person> and <birth year> sentences with <person> and <birth year> substrings with <person> and <birth year> web pages with <person> sentences with <person> 1642 1685 1869 1770 1899 ludwig van beethoven humphrey bogart mohandas gandhi john sebastian bach isaac newton <person> <birth year> figure 1: learning extraction patterns from filled templates and web pages in the late 90s, there was a substantial body of research on learning information extraction patterns from templates . 
51	as in the original algorithm, all substrings linking terms x and y are then extracted from s x,y , and overall frequencies are computed to form p. pattern ranking/selection in , a frequency threshold on the patterns in p is set to select the final patterns. 
2	many recent efforts have also focused on extracting binary semantic relations between entities, such as entailments , is-a , part-of , and other relations. 
61	several similar approaches have been proposed , with various applications: question-answering , multi-document named entity coreference , and generating 15 biographical information . 
30	these patterns could be manually generated, such as the ones described here, or learned from text, as described in ravichandran and hovy . 
33	indeed, many researchers have recently tapped the web as a data-source for improving performance on nlp tasks , ravichandran and hovy , keller and lapata ). 
69	ravichandran and hovy evaluated the performance of a qa system that is based solely on paraphrases, an approach resembling ours. 
64	automatic pattern derivation is more appealing . 
1	 also use bootstrapping, and learn simple surface patterns for extracting binary relations from the web. 
36	many recent efforts have also focused on extracting semantic relations between entities, such as entailments , is-a , part-of , and other relations. 
14	a few recent works used the web to collect statistics on word cooccurrences. 
41	these retrieved text fragments are then considered good candidate for paraphrasing x bought y. anchor-based learning methods have been used to investigate many semantic relations ranging from very general ones as the isa relation in to very specific ones as in where paraphrases of question-answer pairs are searched in the web or as in where a method to scan the web for searching textual entailment prototype relations is presented. 
68	we also used, to a limited extend, a bootstrapping technique to get more data , a method that starts by an unambiguous set of anchors for a target sense. 
13	this may just be the m characters to the left or to the right , the longest common substring of several contexts , or all substrings obtained with a suffix tree constructor . 
3	from these, we <verb> a <noun> for of a new <noun> to <verb> the in this section , we <verb> the <noun> of the <noun> <verb> in this paper is to <verb> the <noun> after figure 8: examples of patterns extracted using ravichandran and hovy’s method method correct sentences our system with bootstrapping 88 ravichandran and hovy 58 our system, no bootstrapping, wordnet 50 our system, no bootstrapping, seeds only 37 figure 9: gold standard evaluation: results the precision of each pattern was calculated by dividing the number of strings matching the pattern instantiated with both the goal-verb and all wordnet synonyms of the goal-noun, by the number of strings matching the patterns instantiated with the goal-verb only. 
37	this requirement has motivated work on qa systems to incorporate knowledge processing components such as semantic representation, ontologies, reasoning and inference engines, e.g., , , . 
6	many research ideas have exploited the web in unsupervised or weakly supervised algorithms for natural language processing , ravichandran and hovy , keller and lapata ). 
29	in order to train a rote extractor from the web, this procedure is usually followed . 
